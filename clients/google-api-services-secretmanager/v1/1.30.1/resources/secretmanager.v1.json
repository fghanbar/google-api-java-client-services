{
  "resources": {
    "projects": {
      "resources": {
        "secrets": {
          "methods": {
            "patch": {
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Output only. The resource name of the Secret in the format `projects/*/secrets/*`.",
                  "pattern": "^projects/[^/]+/secrets/[^/]+$",
                  "type": "string",
                  "location": "path"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Required. Specifies the fields to be updated.",
                  "type": "string"
                }
              },
              "path": "v1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "description": "Updates metadata of an existing Secret.",
              "response": {
                "$ref": "Secret"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/secrets/{secretsId}",
              "id": "secretmanager.projects.secrets.patch",
              "request": {
                "$ref": "Secret"
              }
            },
            "create": {
              "path": "v1/{+parent}/secrets",
              "request": {
                "$ref": "Secret"
              },
              "response": {
                "$ref": "Secret"
              },
              "flatPath": "v1/projects/{projectsId}/secrets",
              "description": "Creates a new Secret containing no SecretVersions.",
              "id": "secretmanager.projects.secrets.create",
              "parameters": {
                "secretId": {
                  "description": "Required. This must be unique within the project.\n\nA secret ID is a string with a maximum length of 255 characters and can\ncontain uppercase and lowercase letters, numerals, and the hyphen (`-`) and\nunderscore (`_`) characters.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "description": "Required. The resource name of the project to associate with the\nSecret, in the format `projects/*`.",
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST"
            },
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "path": "v1/{+name}",
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+/secrets/[^/]+$",
                  "location": "path",
                  "description": "Required. The resource name of the Secret to delete in the format\n`projects/*/secrets/*`."
                }
              },
              "id": "secretmanager.projects.secrets.delete",
              "description": "Deletes a Secret.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/secrets/{secretsId}"
            },
            "testIamPermissions": {
              "flatPath": "v1/projects/{projectsId}/secrets/{secretsId}:testIamPermissions",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "TestIamPermissionsResponse"
              },
              "httpMethod": "POST",
              "description": "Returns permissions that a caller has for the specified secret.\nIf the secret does not exist, this call returns an empty set of\npermissions, not a NOT_FOUND error.\n\nNote: This operation is designed to be used for building permission-aware\nUIs and command-line tools, not for authorization checking. This operation\nmay \"fail open\" without warning.",
              "parameterOrder": [
                "resource"
              ],
              "path": "v1/{+resource}:testIamPermissions",
              "parameters": {
                "resource": {
                  "required": true,
                  "description": "REQUIRED: The resource for which the policy detail is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/secrets/[^/]+$"
                }
              },
              "id": "secretmanager.projects.secrets.testIamPermissions",
              "request": {
                "$ref": "TestIamPermissionsRequest"
              }
            },
            "list": {
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "ListSecretsResponse"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The resource name of the project associated with the\nSecrets, in the format `projects/*`.",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "required": true
                },
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. Pagination token, returned earlier via\nListSecretsResponse.next_page_token."
                },
                "pageSize": {
                  "type": "integer",
                  "description": "Optional. The maximum number of results to be returned in a single page. If\nset to 0, the server decides the number of results to return. If the\nnumber is greater than 25000, it is capped at 25000.",
                  "format": "int32",
                  "location": "query"
                }
              },
              "description": "Lists Secrets.",
              "path": "v1/{+parent}/secrets",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1/projects/{projectsId}/secrets",
              "id": "secretmanager.projects.secrets.list"
            },
            "get": {
              "path": "v1/{+name}",
              "response": {
                "$ref": "Secret"
              },
              "description": "Gets metadata for a given Secret.",
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The resource name of the Secret, in the format `projects/*/secrets/*`.",
                  "required": true,
                  "pattern": "^projects/[^/]+/secrets/[^/]+$"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1/projects/{projectsId}/secrets/{secretsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "secretmanager.projects.secrets.get"
            },
            "setIamPolicy": {
              "parameters": {
                "resource": {
                  "type": "string",
                  "location": "path",
                  "description": "REQUIRED: The resource for which the policy is being specified.\nSee the operation documentation for the appropriate value for this field.",
                  "required": true,
                  "pattern": "^projects/[^/]+/secrets/[^/]+$"
                }
              },
              "path": "v1/{+resource}:setIamPolicy",
              "request": {
                "$ref": "SetIamPolicyRequest"
              },
              "id": "secretmanager.projects.secrets.setIamPolicy",
              "httpMethod": "POST",
              "description": "Sets the access control policy on the specified secret. Replaces any\nexisting policy.\n\nPermissions on SecretVersions are enforced according\nto the policy set on the associated Secret.",
              "flatPath": "v1/projects/{projectsId}/secrets/{secretsId}:setIamPolicy",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Policy"
              },
              "parameterOrder": [
                "resource"
              ]
            },
            "addVersion": {
              "description": "Creates a new SecretVersion containing secret data and attaches\nit to an existing Secret.",
              "id": "secretmanager.projects.secrets.addVersion",
              "path": "v1/{+parent}:addVersion",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+/secrets/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The resource name of the Secret to associate with the\nSecretVersion in the format `projects/*/secrets/*`.",
                  "type": "string"
                }
              },
              "flatPath": "v1/projects/{projectsId}/secrets/{secretsId}:addVersion",
              "response": {
                "$ref": "SecretVersion"
              },
              "request": {
                "$ref": "AddSecretVersionRequest"
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "getIamPolicy": {
              "response": {
                "$ref": "Policy"
              },
              "httpMethod": "GET",
              "description": "Gets the access control policy for a secret.\nReturns empty policy if the secret exists and does not have a policy set.",
              "flatPath": "v1/projects/{projectsId}/secrets/{secretsId}:getIamPolicy",
              "id": "secretmanager.projects.secrets.getIamPolicy",
              "parameterOrder": [
                "resource"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+resource}:getIamPolicy",
              "parameters": {
                "resource": {
                  "required": true,
                  "type": "string",
                  "description": "REQUIRED: The resource for which the policy is being requested.\nSee the operation documentation for the appropriate value for this field.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/secrets/[^/]+$"
                },
                "options.requestedPolicyVersion": {
                  "format": "int32",
                  "location": "query",
                  "description": "Optional. The policy format version to be returned.\n\nValid values are 0, 1, and 3. Requests specifying an invalid value will be\nrejected.\n\nRequests for policies with any conditional bindings must specify version 3.\nPolicies without any conditional bindings may specify any valid value or\nleave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                  "type": "integer"
                }
              }
            }
          },
          "resources": {
            "versions": {
              "methods": {
                "destroy": {
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "Required. The resource name of the SecretVersion to destroy in the format\n`projects/*/secrets/*/versions/*`.",
                      "pattern": "^projects/[^/]+/secrets/[^/]+/versions/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "DestroySecretVersionRequest"
                  },
                  "description": "Destroys a SecretVersion.\n\nSets the state of the SecretVersion to\nDESTROYED and irrevocably destroys the\nsecret data.",
                  "path": "v1/{+name}:destroy",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "secretmanager.projects.secrets.versions.destroy",
                  "flatPath": "v1/projects/{projectsId}/secrets/{secretsId}/versions/{versionsId}:destroy",
                  "response": {
                    "$ref": "SecretVersion"
                  }
                },
                "disable": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "Required. The resource name of the SecretVersion to disable in the format\n`projects/*/secrets/*/versions/*`.",
                      "pattern": "^projects/[^/]+/secrets/[^/]+/versions/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "DisableSecretVersionRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Disables a SecretVersion.\n\nSets the state of the SecretVersion to\nDISABLED.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1/{+name}:disable",
                  "response": {
                    "$ref": "SecretVersion"
                  },
                  "id": "secretmanager.projects.secrets.versions.disable",
                  "flatPath": "v1/projects/{projectsId}/secrets/{secretsId}/versions/{versionsId}:disable"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+parent}/versions",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListSecretVersionsResponse"
                  },
                  "id": "secretmanager.projects.secrets.versions.list",
                  "description": "Lists SecretVersions. This call does not return secret\ndata.",
                  "flatPath": "v1/projects/{projectsId}/secrets/{secretsId}/versions",
                  "parameters": {
                    "pageToken": {
                      "description": "Optional. Pagination token, returned earlier via\nListSecretVersionsResponse.next_page_token][].",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/secrets/[^/]+$",
                      "description": "Required. The resource name of the Secret associated with the\nSecretVersions to list, in the format\n`projects/*/secrets/*`."
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. The maximum number of results to be returned in a single page. If\nset to 0, the server decides the number of results to return. If the\nnumber is greater than 25000, it is capped at 25000."
                    }
                  },
                  "httpMethod": "GET"
                },
                "access": {
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name of the SecretVersion in the format\n`projects/*/secrets/*/versions/*`.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/secrets/[^/]+/versions/[^/]+$"
                    }
                  },
                  "path": "v1/{+name}:access",
                  "flatPath": "v1/projects/{projectsId}/secrets/{secretsId}/versions/{versionsId}:access",
                  "id": "secretmanager.projects.secrets.versions.access",
                  "response": {
                    "$ref": "AccessSecretVersionResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Accesses a SecretVersion. This call returns the secret data.\n\n`projects/*/secrets/*/versions/latest` is an alias to the `latest`\nSecretVersion."
                },
                "get": {
                  "id": "secretmanager.projects.secrets.versions.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "path": "v1/{+name}",
                  "flatPath": "v1/projects/{projectsId}/secrets/{secretsId}/versions/{versionsId}",
                  "response": {
                    "$ref": "SecretVersion"
                  },
                  "description": "Gets metadata for a SecretVersion.\n\n`projects/*/secrets/*/versions/latest` is an alias to the `latest`\nSecretVersion.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/secrets/[^/]+/versions/[^/]+$",
                      "type": "string",
                      "description": "Required. The resource name of the SecretVersion in the format\n`projects/*/secrets/*/versions/*`.\n`projects/*/secrets/*/versions/latest` is an alias to the `latest`\nSecretVersion.",
                      "required": true,
                      "location": "path"
                    }
                  }
                },
                "enable": {
                  "flatPath": "v1/projects/{projectsId}/secrets/{secretsId}/versions/{versionsId}:enable",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/secrets/[^/]+/versions/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The resource name of the SecretVersion to enable in the format\n`projects/*/secrets/*/versions/*`."
                    }
                  },
                  "path": "v1/{+name}:enable",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "secretmanager.projects.secrets.versions.enable",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "EnableSecretVersionRequest"
                  },
                  "response": {
                    "$ref": "SecretVersion"
                  },
                  "description": "Enables a SecretVersion.\n\nSets the state of the SecretVersion to\nENABLED."
                }
              }
            }
          }
        },
        "locations": {
          "methods": {
            "get": {
              "description": "Gets information about a location.",
              "flatPath": "v1/projects/{projectsId}/locations/{locationsId}",
              "id": "secretmanager.projects.locations.get",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Resource name for the location.",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Location"
              },
              "httpMethod": "GET"
            },
            "list": {
              "description": "Lists information about the supported locations for this service.",
              "id": "secretmanager.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "flatPath": "v1/projects/{projectsId}/locations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}/locations",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "description": "The standard list page size.",
                  "format": "int32"
                },
                "filter": {
                  "type": "string",
                  "description": "The standard list filter.",
                  "location": "query"
                },
                "name": {
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path"
                },
                "pageToken": {
                  "type": "string",
                  "description": "The standard list page token.",
                  "location": "query"
                }
              }
            }
          }
        }
      }
    }
  },
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "description": "Stores sensitive data such as API keys, passwords, and certificates. Provides convenience while improving security.\n",
  "mtlsRootUrl": "https://secretmanager.mtls.googleapis.com/",
  "name": "secretmanager",
  "batchPath": "batch",
  "basePath": "",
  "discoveryVersion": "v1",
  "servicePath": "",
  "title": "Secret Manager API",
  "fullyEncodeReservedExpansion": true,
  "revision": "20200619",
  "baseUrl": "https://secretmanager.googleapis.com/",
  "ownerName": "Google",
  "id": "secretmanager:v1",
  "version_module": true,
  "documentationLink": "https://cloud.google.com/secret-manager/",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "rootUrl": "https://secretmanager.googleapis.com/",
  "protocol": "rest",
  "kind": "discovery#restDescription",
  "version": "v1",
  "parameters": {
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "type": "string",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    }
  },
  "schemas": {
    "AccessSecretVersionResponse": {
      "id": "AccessSecretVersionResponse",
      "properties": {
        "name": {
          "description": "The resource name of the SecretVersion in the format\n`projects/*/secrets/*/versions/*`.",
          "type": "string"
        },
        "payload": {
          "description": "Secret payload",
          "$ref": "SecretPayload"
        }
      },
      "type": "object",
      "description": "Response message for SecretManagerService.AccessSecretVersion."
    },
    "UserManaged": {
      "id": "UserManaged",
      "properties": {
        "replicas": {
          "type": "array",
          "items": {
            "$ref": "Replica"
          },
          "description": "Required. The list of Replicas for this Secret.\n\nCannot be empty."
        }
      },
      "type": "object",
      "description": "A replication policy that replicates the Secret payload into the\nlocations specified in Secret.replication.user_managed.replicas"
    },
    "Binding": {
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "id": "Binding",
      "properties": {
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding.\n\nIf the condition evaluates to `true`, then this binding applies to the\ncurrent request.\n\nIf the condition evaluates to `false`, then this binding does not apply to\nthe current request. However, a different role binding might grant the same\nrole to one or more of the members in this binding.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM\ndocumentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        },
        "members": {
          "type": "array",
          "description": "Specifies the identities requesting access for a Cloud Platform resource.\n`members` can have the following values:\n\n* `allUsers`: A special identifier that represents anyone who is\n   on the internet; with or without a Google account.\n\n* `allAuthenticatedUsers`: A special identifier that represents anyone\n   who is authenticated with a Google account or a service account.\n\n* `user:{emailid}`: An email address that represents a specific Google\n   account. For example, `alice@example.com` .\n\n\n* `serviceAccount:{emailid}`: An email address that represents a service\n   account. For example, `my-other-app@appspot.gserviceaccount.com`.\n\n* `group:{emailid}`: An email address that represents a Google group.\n   For example, `admins@example.com`.\n\n* `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a user that has been recently deleted. For\n   example, `alice@example.com?uid=123456789012345678901`. If the user is\n   recovered, this value reverts to `user:{emailid}` and the recovered user\n   retains the role in the binding.\n\n* `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus\n   unique identifier) representing a service account that has been recently\n   deleted. For example,\n   `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`.\n   If the service account is undeleted, this value reverts to\n   `serviceAccount:{emailid}` and the undeleted service account retains the\n   role in the binding.\n\n* `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique\n   identifier) representing a Google group that has been recently\n   deleted. For example, `admins@example.com?uid=123456789012345678901`. If\n   the group is recovered, this value reverts to `group:{emailid}` and the\n   recovered group retains the role in the binding.\n\n\n* `domain:{domain}`: The G Suite domain (primary) that represents all the\n   users of that domain. For example, `google.com` or `example.com`.\n\n",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to `members`.\nFor example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        }
      }
    },
    "Replica": {
      "type": "object",
      "description": "Represents a Replica for this Secret.",
      "properties": {
        "location": {
          "type": "string",
          "description": "The canonical IDs of the location to replicate data.\nFor example: `\"us-east1\"`."
        }
      },
      "id": "Replica"
    },
    "DisableSecretVersionRequest": {
      "description": "Request message for SecretManagerService.DisableSecretVersion.",
      "type": "object",
      "id": "DisableSecretVersionRequest",
      "properties": {}
    },
    "AddSecretVersionRequest": {
      "description": "Request message for SecretManagerService.AddSecretVersion.",
      "id": "AddSecretVersionRequest",
      "properties": {
        "payload": {
          "description": "Required. The secret payload of the SecretVersion.",
          "$ref": "SecretPayload"
        }
      },
      "type": "object"
    },
    "SecretVersion": {
      "description": "A secret version resource in the Secret Manager API.",
      "properties": {
        "state": {
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLED",
            "DISABLED",
            "DESTROYED"
          ],
          "enumDescriptions": [
            "Not specified. This value is unused and invalid.",
            "The SecretVersion may be accessed.",
            "The SecretVersion may not be accessed, but the secret data\nis still available and can be placed back into the ENABLED\nstate.",
            "The SecretVersion is destroyed and the secret data is no longer\nstored. A version may not leave this state once entered."
          ],
          "description": "Output only. The current state of the SecretVersion."
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource name of the SecretVersion in the\nformat `projects/*/secrets/*/versions/*`.\n\nSecretVersion IDs in a Secret start at 1 and\nare incremented for each subsequent version of the secret."
        },
        "destroyTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time this SecretVersion was destroyed.\nOnly present if state is\nDESTROYED."
        },
        "createTime": {
          "description": "Output only. The time at which the SecretVersion was created.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "SecretVersion"
    },
    "AuditLogConfig": {
      "properties": {
        "logType": {
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "description": "The log type that this config enables.",
          "type": "string"
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of\npermission.\nFollows the same format of Binding.members.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "Provides the configuration for logging a type of permissions.\nExample:\n\n    {\n      \"audit_log_configs\": [\n        {\n          \"log_type\": \"DATA_READ\",\n          \"exempted_members\": [\n            \"user:jose@example.com\"\n          ]\n        },\n        {\n          \"log_type\": \"DATA_WRITE\"\n        }\n      ]\n    }\n\nThis enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting\njose@example.com from DATA_READ logging.",
      "id": "AuditLogConfig"
    },
    "ListSecretsResponse": {
      "description": "Response message for SecretManagerService.ListSecrets.",
      "id": "ListSecretsResponse",
      "type": "object",
      "properties": {
        "totalSize": {
          "format": "int32",
          "description": "The total number of Secrets.",
          "type": "integer"
        },
        "secrets": {
          "description": "The list of Secrets sorted in reverse by create_time (newest\nfirst).",
          "type": "array",
          "items": {
            "$ref": "Secret"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in\nListSecretsRequest.page_token to retrieve the next page."
        }
      }
    },
    "EnableSecretVersionRequest": {
      "type": "object",
      "id": "EnableSecretVersionRequest",
      "properties": {},
      "description": "Request message for SecretManagerService.EnableSecretVersion."
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is\nallowed."
        }
      }
    },
    "Expr": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which\ndescribes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language\nsyntax."
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing\nits purpose. This can be used e.g. in UIs which allow to enter the\nexpression.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error\nreporting, e.g. a file name and a position in the file."
        }
      },
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL)\nsyntax. CEL is a C-like expression language. The syntax and semantics of CEL\nare documented at https://github.com/google/cel-spec.\n\nExample (Comparison):\n\n    title: \"Summary size limit\"\n    description: \"Determines if a summary is less than 100 chars\"\n    expression: \"document.summary.size() \u003c 100\"\n\nExample (Equality):\n\n    title: \"Requestor is owner\"\n    description: \"Determines if requestor is the document owner\"\n    expression: \"document.owner == request.auth.claims.email\"\n\nExample (Logic):\n\n    title: \"Public documents\"\n    description: \"Determine whether the document should be publicly visible\"\n    expression: \"document.type != 'private' && document.type != 'internal'\"\n\nExample (Data Manipulation):\n\n    title: \"Notification string\"\n    description: \"Create a notification string with a timestamp.\"\n    expression: \"'New message received at ' + string(document.create_time)\"\n\nThe exact variables and functions that may be referenced within an expression\nare determined by the service that evaluates it. See the service\ndocumentation for additional information."
    },
    "AuditConfig": {
      "type": "object",
      "description": "Specifies the audit configuration for a service.\nThe configuration determines which permission types are logged, and what\nidentities, if any, are exempted from logging.\nAn AuditConfig must have one or more AuditLogConfigs.\n\nIf there are AuditConfigs for both `allServices` and a specific service,\nthe union of the two AuditConfigs is used for that service: the log_types\nspecified in each AuditConfig are enabled, and the exempted_members in each\nAuditLogConfig are exempted.\n\nExample Policy with multiple AuditConfigs:\n\n    {\n      \"audit_configs\": [\n        {\n          \"service\": \"allServices\",\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\",\n              \"exempted_members\": [\n                \"user:jose@example.com\"\n              ]\n            },\n            {\n              \"log_type\": \"DATA_WRITE\"\n            },\n            {\n              \"log_type\": \"ADMIN_READ\"\n            }\n          ]\n        },\n        {\n          \"service\": \"sampleservice.googleapis.com\",\n          \"audit_log_configs\": [\n            {\n              \"log_type\": \"DATA_READ\"\n            },\n            {\n              \"log_type\": \"DATA_WRITE\",\n              \"exempted_members\": [\n                \"user:aliya@example.com\"\n              ]\n            }\n          ]\n        }\n      ]\n    }\n\nFor sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ\nlogging. It also exempts jose@example.com from DATA_READ logging, and\naliya@example.com from DATA_WRITE logging.",
      "id": "AuditConfig",
      "properties": {
        "auditLogConfigs": {
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission."
        },
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging.\nFor example, `storage.googleapis.com`, `cloudsql.googleapis.com`.\n`allServices` is a special value that covers all services."
        }
      }
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with\nwildcards (such as '*' or 'storage.*') are not allowed. For more\ninformation see\n[IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "id": "TestIamPermissionsRequest"
    },
    "Automatic": {
      "type": "object",
      "id": "Automatic",
      "description": "A replication policy that replicates the Secret payload without any\nrestrictions.",
      "properties": {}
    },
    "Location": {
      "type": "object",
      "properties": {
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Cross-service attributes for the location. For example\n\n    {\"cloud.googleapis.com/region\": \"us-east1\"}"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given\nlocation.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name.\nFor example, \"Tokyo\".",
          "type": "string"
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations.\nFor example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        }
      },
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "DestroySecretVersionRequest": {
      "type": "object",
      "properties": {},
      "description": "Request message for SecretManagerService.DestroySecretVersion.",
      "id": "DestroySecretVersionRequest"
    },
    "Empty": {
      "type": "object",
      "properties": {},
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated\nempty messages in your APIs. A typical example is to use it as the request\nor the response type of an API method. For instance:\n\n    service Foo {\n      rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty);\n    }\n\nThe JSON representation for `Empty` is empty JSON object `{}`."
    },
    "Replication": {
      "properties": {
        "userManaged": {
          "$ref": "UserManaged",
          "description": "The Secret will only be replicated into the locations specified."
        },
        "automatic": {
          "description": "The Secret will automatically be replicated without any restrictions.",
          "$ref": "Automatic"
        }
      },
      "type": "object",
      "description": "A policy that defines the replication configuration of data.\n",
      "id": "Replication"
    },
    "ListLocationsResponse": {
      "type": "object",
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Locations.ListLocations."
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access\ncontrols for Google Cloud resources.\n\n\nA `Policy` is a collection of `bindings`. A `binding` binds one or more\n`members` to a single `role`. Members can be user accounts, service accounts,\nGoogle groups, and domains (such as G Suite). A `role` is a named list of\npermissions; each `role` can be an IAM predefined role or a user-created\ncustom role.\n\nFor some types of Google Cloud resources, a `binding` can also specify a\n`condition`, which is a logical expression that allows access to a resource\nonly if the expression evaluates to `true`. A condition can add constraints\nbased on attributes of the request, the resource, or both. To learn which\nresources support conditions in their IAM policies, see the\n[IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).\n\n**JSON example:**\n\n    {\n      \"bindings\": [\n        {\n          \"role\": \"roles/resourcemanager.organizationAdmin\",\n          \"members\": [\n            \"user:mike@example.com\",\n            \"group:admins@example.com\",\n            \"domain:google.com\",\n            \"serviceAccount:my-project-id@appspot.gserviceaccount.com\"\n          ]\n        },\n        {\n          \"role\": \"roles/resourcemanager.organizationViewer\",\n          \"members\": [\n            \"user:eve@example.com\"\n          ],\n          \"condition\": {\n            \"title\": \"expirable access\",\n            \"description\": \"Does not grant access after Sep 2020\",\n            \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\",\n          }\n        }\n      ],\n      \"etag\": \"BwWWja0YfJA=\",\n      \"version\": 3\n    }\n\n**YAML example:**\n\n    bindings:\n    - members:\n      - user:mike@example.com\n      - group:admins@example.com\n      - domain:google.com\n      - serviceAccount:my-project-id@appspot.gserviceaccount.com\n      role: roles/resourcemanager.organizationAdmin\n    - members:\n      - user:eve@example.com\n      role: roles/resourcemanager.organizationViewer\n      condition:\n        title: expirable access\n        description: Does not grant access after Sep 2020\n        expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\n    - etag: BwWWja0YfJA=\n    - version: 3\n\nFor a description of IAM and its features, see the\n[IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "version": {
          "description": "Specifies the format of the policy.\n\nValid values are `0`, `1`, and `3`. Requests that specify an invalid value\nare rejected.\n\nAny operation that affects conditional role bindings must specify version\n`3`. This requirement applies to the following operations:\n\n* Getting a policy that includes a conditional role binding\n* Adding a conditional role binding to a policy\n* Changing a conditional role binding in a policy\n* Removing any role binding, with or without a condition, from a policy\n  that includes conditions\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.\n\nIf a policy does not include any conditions, operations on that policy may\nspecify any valid version or leave the field unset.\n\nTo learn which resources support conditions in their IAM policies, see the\n[IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        },
        "etag": {
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help\nprevent simultaneous updates of a policy from overwriting each other.\nIt is strongly suggested that systems make use of the `etag` in the\nread-modify-write cycle to perform policy updates in order to avoid race\nconditions: An `etag` is returned in the response to `getIamPolicy`, and\nsystems are expected to put that etag in the request to `setIamPolicy` to\nensure that their change will be applied to the same version of the policy.\n\n**Important:** If you use IAM Conditions, you must include the `etag` field\nwhenever you call `setIamPolicy`. If you omit this field, then IAM allows\nyou to overwrite a version `3` policy with a version `1` policy, and all of\nthe conditions in the version `3` policy are lost.",
          "format": "byte"
        },
        "auditConfigs": {
          "items": {
            "$ref": "AuditConfig"
          },
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a\n`condition` that determines how and when the `bindings` are applied. Each\nof the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        }
      },
      "type": "object",
      "id": "Policy"
    },
    "Secret": {
      "id": "Secret",
      "description": "A Secret is a logical secret whose value and versions can\nbe accessed.\n\nA Secret is made up of zero or more SecretVersions that\nrepresent the secret data.",
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time at which the Secret was created.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The labels assigned to this Secret.\n\nLabel keys must be between 1 and 63 characters long, have a UTF-8 encoding\nof maximum 128 bytes, and must conform to the following PCRE regular\nexpression: `\\p{Ll}\\p{Lo}{0,62}`\n\nLabel values must be between 0 and 63 characters long, have a UTF-8\nencoding of maximum 128 bytes, and must conform to the following PCRE\nregular expression: `[\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}`\n\nNo more than 64 labels can be assigned to a given resource.",
          "type": "object"
        },
        "name": {
          "description": "Output only. The resource name of the Secret in the format `projects/*/secrets/*`.",
          "type": "string"
        },
        "replication": {
          "$ref": "Replication",
          "description": "Required. Immutable. The replication policy of the secret data attached to the Secret.\n\nThe replication policy cannot be changed after the Secret has been created."
        }
      }
    },
    "SetIamPolicyRequest": {
      "properties": {
        "updateMask": {
          "type": "string",
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only\nthe fields in the mask will be modified. If no mask is provided, the\nfollowing default mask is used:\n\n`paths: \"bindings, etag\"`"
        },
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of\nthe policy is limited to a few 10s of KB. An empty policy is a\nvalid policy but certain Cloud Platform services (such as Projects)\nmight reject them."
        }
      },
      "type": "object",
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method."
    },
    "ListSecretVersionsResponse": {
      "type": "object",
      "description": "Response message for SecretManagerService.ListSecretVersions.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve the next page of results. Pass this value in\nListSecretVersionsRequest.page_token to retrieve the next page."
        },
        "versions": {
          "items": {
            "$ref": "SecretVersion"
          },
          "description": "The list of SecretVersions sorted in reverse by\ncreate_time (newest first).",
          "type": "array"
        },
        "totalSize": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of SecretVersions."
        }
      },
      "id": "ListSecretVersionsResponse"
    },
    "SecretPayload": {
      "id": "SecretPayload",
      "type": "object",
      "description": "A secret payload resource in the Secret Manager API. This contains the\nsensitive secret payload that is associated with a SecretVersion.",
      "properties": {
        "data": {
          "type": "string",
          "description": "The secret data. Must be no larger than 64KiB.",
          "format": "byte"
        }
      }
    }
  },
  "canonicalName": "Secret Manager",
  "ownerDomain": "google.com"
}
